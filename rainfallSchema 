const mongoose = require('mongoose');

// Define the Rainfall schema
const rainfallSchema = new mongoose.Schema({
    stationId: { type: Number, required: true },
    name: { type: String, required: true },
    basin: { type: String, required: true },
    district: { type: String, required: true },
    status: { type: String, required: true },
    longitude: { type: Number, required: true },
    latitude: { type: Number, required: true },
    totalRainfall: { type: Number }, // Add any field you need, e.g., totalRainfall
    timestamp: { type: Date, default: Date.now }
});

// Create a Rainfall model
const Rainfall = mongoose.model('Rainfall', rainfallSchema);
module.exports = Rainfall;



// parse json data 
const fs = require('fs');
const Rainfall = require('./path-to-your-rainfall-model');

// Read the JSON file (replace with your method of reading data)
fs.readFile('path-to-your-json-file.json', 'utf8', (err, data) => {
    if (err) {
        console.error('Error reading JSON file:', err);
        return;
    }

    // Parse the JSON data
    const jsonData = JSON.parse(data);

    // Iterate over each station data and create a new document
    jsonData.data.forEach(station => {
        const newRainfall = new Rainfall({
            stationId: station.id,
            name: station.name,
            basin: station.basin,
            district: station.district,
            status: station.status,
            longitude: station.longitude,
            latitude: station.latitude,
            totalRainfall: station.value || 0, // Use 0 if totalRainfall is null
        });

        // Save the document to MongoDB
        newRainfall.save((err) => {
            if (err) {
                console.error('Error saving to MongoDB:', err);
            } else {
                console.log('Rainfall data saved successfully!');
            }
        });
    });
});
